# create table for avertable death estimates by region
# -- Baseline Scenario
Associated_death_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode       = "baseline")
Attributable_death_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode       = "baseline")
Susceptible_death_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode       = "baseline")
# create table for avertable DALY estimates by region
# -- Baseline Scenario
Associated_daly_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode       = "baseline")
Attributable_daly_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode       = "baseline")
Susceptible_daly_averted_re <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode       = "baseline")
# create table for avertable death estimates by region
# -- High-potential Scenario
Associated_death_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode       = "high_potential")
Attributable_death_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode       = "high_potential")
Susceptible_death_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode       = "high_potential")
# create table for avertable DALY estimates by region
# -- High-potential Scenario
Associated_daly_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode       = "high_potential")
Attributable_daly_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode       = "high_potential")
Susceptible_daly_averted_re_opt <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode       = "high_potential")
# create table for incremental avertable deaths estimated by region
# -- (High-potential Scenario - Baseline Scenario)
Associated_death_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode       = "incremental")
Attributable_death_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode       = "incremental")
Susceptible_death_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode       = "incremental")
# create table for incremental avertable DALY estimated by region
# -- (High-potential Scenario - Baseline Scenario)
Associated_daly_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode       = "incremental")
Attributable_daly_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode       = "incremental")
Susceptible_daly_averted_re_inc <- aggregate_impact_by_region(
input_data = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode       = "incremental")
# ------------------------------------------------------------------------------
# Table: vaccine avertable AMR health burden globally and by WHO region, 2019
Table_avertable_burden_by_region <- create_avertable_burden_table(
Associated_death_averted       = Associated_death_averted_re,
Associated_death_averted_opt   = Associated_death_averted_re_opt,
Associated_death_averted_inc   = Associated_death_averted_re_inc,
Associated_daly_averted        = Associated_daly_averted_re,
Associated_daly_averted_opt    = Associated_daly_averted_re_opt,
Associated_daly_averted_inc    = Associated_daly_averted_re_inc,
Attributable_death_averted     = Attributable_death_averted_re,
Attributable_death_averted_opt = Attributable_death_averted_re_opt,
Attributable_death_averted_inc = Attributable_death_averted_re_inc,
Attributable_daly_averted      = Attributable_daly_averted_re,
Attributable_daly_averted_opt  = Attributable_daly_averted_re_opt,
Attributable_daly_averted_inc  = Attributable_daly_averted_re_inc,
Susceptible_death_averted      = Susceptible_death_averted_re,
Susceptible_death_averted_opt  = Susceptible_death_averted_re_opt,
Susceptible_death_averted_inc  = Susceptible_death_averted_re_inc,
Susceptible_daly_averted       = Susceptible_daly_averted_re,
Susceptible_daly_averted_opt   = Susceptible_daly_averted_re_opt,
Susceptible_daly_averted_inc   = Susceptible_daly_averted_re_inc)
fwrite (x    = Table_avertable_burden_by_region,
file = file.path("tables", "Table_avertable_burden_by_region.csv"))
# ------------------------------------------------------------------------------
# Figure: vaccine impact by WHO region, 2019
# create graph with avertable AMR burden by region -- Baseline Scenario
death_averted_by_region_graph <- create_burden_averted_by_region_graph(
Attributable_burden_averted = Attributable_death_averted_re,
Associated_burden_averted   = Associated_death_averted_re,
ylabel                      = "Vaccine Avertable Deaths")
daly_averted_by_region_graph <- create_burden_averted_by_region_graph(
Attributable_burden_averted = Attributable_daly_averted_re,
Associated_burden_averted   = Associated_daly_averted_re,
ylabel                      = "Vaccine Avertable DALYs")
# create figure
death_averted_by_region_graph / daly_averted_by_region_graph
# save the image file
ggsave (filename = "Figure_avertable_burden_by_region.png",
path = "figures",
width = 6,
height = 8,
dpi = 600)
ggsave (filename = "Figure_avertable_burden_by_region.eps",
path = "figures",
device = "eps",
width = 7,
height = 7)
# ------------------------------------------------------------------------------
# global vaccine avertable deaths and DALYs attributable to and associated with
# bacterial antimicrobial resistance by infectious syndrome, 2019
# disease presentation -- Neisseria gonorrhoeae data is only available for DALYs
DiseasePresentation_death <- unique(death_burden_dt$Disease_presentation)
DiseasePresentation_daly  <- unique(daly_burden_dt$Disease_presentation)
# create table for avertable death estimates by disease presentation
# -- Baseline Scenario
Associated_death_averted_dp   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "baseline")
Attributable_death_averted_dp <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "baseline")
Susceptible_death_averted_dp <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "baseline")
# create table for avertable DALY estimates by disease presentation
# -- Baseline Scenario
Associated_daly_averted_dp   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "baseline")
Attributable_daly_averted_dp <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "baseline")
Susceptible_daly_averted_dp <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "baseline")
# create table for avertable death estimates by disease presentation
# -- High-potential Scenario
Associated_death_averted_dp_opt   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "high_potential")
Attributable_death_averted_dp_opt <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "high_potential")
Susceptible_death_averted_dp_opt <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "high_potential")
# create table for avertable DALY estimates by disease presentation
# -- High-potential Scenario
Associated_daly_averted_dp_opt   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "high_potential")
Attributable_daly_averted_dp_opt <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "high_potential")
Susceptible_daly_averted_dp_opt <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "high_potential")
# create table for incremental avertable death estimates by disease presentation
# -- (High-potential Scenario - Baseline Scenario)
Associated_death_averted_dp_inc   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "incremental")
Attributable_death_averted_dp_inc <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "incremental")
Susceptible_death_averted_dp_inc <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_death,
mode                = "incremental")
# create table for incremental avertable DALY estimates by disease presentation
# -- (High-potential Scenario - Baseline Scenario)
Associated_daly_averted_dp_inc   <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_associated_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "incremental")
Attributable_daly_averted_dp_inc <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_attributable_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "incremental")
Susceptible_daly_averted_dp_inc <- aggregate_impact_by_dp(
input_data          = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
DiseasePresentation = DiseasePresentation_daly,
mode                = "incremental")
# ------------------------------------------------------------------------------
# Table: vaccine avertable AMR health burden by infectious syndrome, 2019
Table_avertable_burden_by_dp <- create_avertable_burden_table(
Associated_death_averted       = Associated_death_averted_dp,
Associated_death_averted_opt   = Associated_death_averted_dp_opt,
Associated_death_averted_inc   = Associated_death_averted_dp_inc,
Associated_daly_averted        = Associated_daly_averted_dp,
Associated_daly_averted_opt    = Associated_daly_averted_dp_opt,
Associated_daly_averted_inc    = Associated_daly_averted_dp_inc,
Attributable_death_averted     = Attributable_death_averted_dp,
Attributable_death_averted_opt = Attributable_death_averted_dp_opt,
Attributable_death_averted_inc = Attributable_death_averted_dp_inc,
Attributable_daly_averted      = Attributable_daly_averted_dp,
Attributable_daly_averted_opt  = Attributable_daly_averted_dp_opt,
Attributable_daly_averted_inc  = Attributable_daly_averted_dp_inc,
Susceptible_death_averted      = Susceptible_death_averted_dp,
Susceptible_death_averted_opt  = Susceptible_death_averted_dp_opt,
Susceptible_death_averted_inc  = Susceptible_death_averted_dp_inc,
Susceptible_daly_averted       = Susceptible_daly_averted_dp,
Susceptible_daly_averted_opt   = Susceptible_daly_averted_dp_opt,
Susceptible_daly_averted_inc   = Susceptible_daly_averted_dp_inc)
Table_avertable_burden_by_dp <-
Table_avertable_burden_by_dp %>% arrange(Counts)
fwrite (x    = Table_avertable_burden_by_dp,
file = file.path("tables", "Table_avertable_burden_by_infectious_syndrome.csv"))
# ------------------------------------------------------------------------------
# Figure: Vaccine impact by infectious syndrome, 2019
# create graph with avertable AMR burden by infectious syndrome
# -- Baseline Scenario
death_averted_by_dp_graph <- create_burden_averted_by_dp_graph(
Attributable_burden_averted = Attributable_death_averted_dp,
Associated_burden_averted   = Associated_death_averted_dp,
ylabel = "Vaccine Avertable Deaths")
daly_averted_by_dp_graph <- create_burden_averted_by_dp_graph(
Attributable_burden_averted = Attributable_daly_averted_dp,
Associated_burden_averted   = Associated_daly_averted_dp,
ylabel = "Vaccine Avertable DALYs")
# create Figure
death_averted_by_dp_graph / daly_averted_by_dp_graph
# save the image file
ggsave (filename = "Figure_avertable_burden_by_dp.png",
path = "figures",
width = 6,
height = 8,
dpi = 600)
ggsave (filename = "Figure_avertable_burden_by_dp.eps",
path = "figures",
device = "eps",
width = 7,
height = 7)
# ------------------------------------------------------------------------------
# global vaccine avertable deaths and DALYs attributable to and associated with
# bacterial antimicrobial resistance by vaccine profiles, 2019
# vaccine profile with multiple options
vaccine_profile_dt_add <- read_csv(file.path("tables", "vaccine_profile.csv"))
# create table for avertable death estimates by vaccine profile
# -- Baseline Scenario
Associated_death_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode_in = "baseline")
Attributable_death_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode_in = "baseline")
Susceptible_death_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode_in = "baseline")
# create table for avertable DALY estimates by vaccine profile
# -- Baseline Scenario
Associated_daly_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode_in = "baseline")
Attributable_daly_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode_in = "baseline")
Susceptible_daly_averted_vp <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode_in = "baseline")
# create table for avertable death estimates by vaccine profile
# -- High-potential Scenario
Associated_death_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode_in = "high_potential")
Attributable_death_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode_in = "high_potential")
Susceptible_death_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode_in = "high_potential")
# create table for avertable DALY estimates by vaccine profile
# -- High-potential Scenario
Associated_daly_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode_in = "high_potential")
Attributable_daly_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode_in = "high_potential")
Susceptible_daly_averted_vp_opt <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode_in = "high_potential")
# create table for avertable incremental death estimates by vaccine profile
# -- (High-potential Scenario - Baseline Scenario)
Associated_death_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_associated_psa.csv")),
mode_in = "incremental")
Attributable_death_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
mode_in = "incremental")
Susceptible_death_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "deaths_susceptible_psa.csv")),
mode_in = "incremental")
# create table for avertable incremental DALY estimates by vaccine profile
# -- (High-potential Scenario - Baseline Scenario)
Associated_daly_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_associated_psa.csv")),
mode_in = "incremental")
Attributable_daly_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_attributable_psa.csv")),
mode_in = "incremental")
Susceptible_daly_averted_vp_inc <- vaccine_imapct_by_vaccine(
data_in = read_csv(file.path("tables", "daly_susceptible_psa.csv")),
mode_in = "incremental")
# ------------------------------------------------------------------------------
# Table: vaccine avertable AMR health burden by vaccine profile, 2019
Table_avertable_burden_by_vp <- create_avertable_burden_table(
Associated_death_averted       = Associated_death_averted_vp,
Associated_death_averted_opt   = Associated_death_averted_vp_opt,
Associated_death_averted_inc   = Associated_death_averted_vp_inc,
Associated_daly_averted        = Associated_daly_averted_vp,
Associated_daly_averted_opt    = Associated_daly_averted_vp_opt,
Associated_daly_averted_inc    = Associated_daly_averted_vp_inc,
Attributable_death_averted     = Attributable_death_averted_vp,
Attributable_death_averted_opt = Attributable_death_averted_vp_opt,
Attributable_death_averted_inc = Attributable_death_averted_vp_inc,
Attributable_daly_averted      = Attributable_daly_averted_vp,
Attributable_daly_averted_opt  = Attributable_daly_averted_vp_opt,
Attributable_daly_averted_inc  = Attributable_daly_averted_vp_inc,
Susceptible_death_averted      = Susceptible_death_averted_vp,
Susceptible_death_averted_opt  = Susceptible_death_averted_vp_opt,
Susceptible_death_averted_inc  = Susceptible_death_averted_vp_inc,
Susceptible_daly_averted       = Susceptible_daly_averted_vp,
Susceptible_daly_averted_opt   = Susceptible_daly_averted_vp_opt,
Susceptible_daly_averted_inc   = Susceptible_daly_averted_vp_inc)
Table_avertable_burden_by_vp <- left_join(vaccine_profile_dt_add,
Table_avertable_burden_by_vp,
by = c("Vaccine_pathogen" = "Counts"))
fwrite (x    = Table_avertable_burden_by_vp,
file = file.path("tables", "Table_avertable_burden_by_vaccine_profile.csv"))
# ------------------------------------------------------------------------------
# Figure: vaccine impact by vaccine profile, 2019
# create graph with avertable AMR burden by vaccine profile -- Baseline Scenario
death_averted_by_vp_graph <- create_burden_averted_by_vp_graph(
Attributable_burden_averted = Attributable_death_averted_vp,
Associated_burden_averted   = Associated_death_averted_vp,
ylabel = "Vaccine Avertable Deaths",
ylim_max = 150000)
daly_averted_by_vp_graph <- create_burden_averted_by_vp_graph(
Attributable_burden_averted = Attributable_daly_averted_vp,
Associated_burden_averted   = Associated_daly_averted_vp,
ylabel = "Vaccine Avertable DALYs",
ylim_max = 11000000)
# create Figure
death_averted_by_vp_graph / daly_averted_by_vp_graph
# save the image file
ggsave (filename = "Figure_burden_averted_by_vaccine_profile.png",
path = "figures",
width = 6,
height = 9,
dpi = 600)
ggsave (filename = "Figure_avertable_burden_by_vaccine_profile.eps",
path = "figures",
device = "eps",
width = 6,
height = 10)
# ------------------------------------------------------------------------------
# Figure 2. Vaccine impact on AMR burden by pathogen, infectious syndrome, and region
# read the three PNG image files
img1 <- readPNG("figures/Figure_burden_averted_by_vaccine_profile.png")
img2 <- readPNG("figures/Figure_avertable_burden_by_dp.png")
img3 <- readPNG("figures/Figure_avertable_burden_by_region.png")
# convert the images to grobs
g1 <- rasterGrob(img1, width = unit(3, "in"))
library (grid)
# ------------------------------------------------------------------------------
# Figure 2. Vaccine impact on AMR burden by pathogen, infectious syndrome, and region
# read the three PNG image files
img1 <- readPNG("figures/Figure_burden_averted_by_vaccine_profile.png")
img2 <- readPNG("figures/Figure_avertable_burden_by_dp.png")
img3 <- readPNG("figures/Figure_avertable_burden_by_region.png")
# convert the images to grobs
g1 <- rasterGrob(img1, width = unit(3, "in"))
g2 <- rasterGrob(img2, width = unit(3, "in"))
g3 <- rasterGrob(img3, width = unit(3, "in"))
# create captions for each image
caption1 <- "Figure 2a"
caption2 <- "Figure 2b"
caption3 <- "Figure 2c"
# create the layout
pdf("figures/Figure_2.pdf", width = 11, height = 8.5)
grid.arrange(
arrangeGrob(top = caption1, g1, vp = viewport(x = 0.5, y = 0.5, width = 1, height = 0.6)),
arrangeGrob(top = caption2, g2, vp = viewport(x = 0.5, y = 0.5, width = 1, height = 0.6)),
arrangeGrob(top = caption3, g3, vp = viewport(x = 0.5, y = 0.5, width = 1, height = 0.6)),
nrow = 1,
widths = c(0.35, 0.35, 0.35),
padding = unit(1, "cm")
)
dev.off()
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# PCV and Hib vaccine impact with current coverage
# -- baseline scenario
vaccine_impact_current <- bind_rows(list(
# impact of current coverage of Hib vaccine on deaths associated with AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")))[Counts == "Haemophilus influenzae",]),
# impact of current coverage of Hib vaccine on deaths attributable to AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")))[Counts == "Haemophilus influenzae",]),
# impact of current coverage of Hib vaccine on dalys associated with AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "daly_associated_psa.csv")))[Counts == "Haemophilus influenzae",]),
# impact of current coverage of Hib vaccine on dalys attributable to AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")))[Counts == "Haemophilus influenzae",]),
# impact of current coverage of PCV on deaths associated with AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")))[Counts == "Streptococcus pneumoniae",]),
# impact of current coverage of PCV on deaths attributable to AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")))[Counts == "Streptococcus pneumoniae",]),
# impact of current coverage of PCV on dalys associated with AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "daly_associated_psa.csv")))[Counts == "Streptococcus pneumoniae",]),
# impact of current coverage of PCV on dalys attributable to AMR
edit_table(estimate_existing_vaccine_impact(
input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")))[Counts == "Streptococcus pneumoniae",])))
vaccine_impact_current$type <- rep(c("death_associated", "death_attributable", "daly_associated", "daly_attributable"), 2)
fwrite (x    = vaccine_impact_current,
file = file.path("tables", "Table_avertable_burden_with_current_coverage.csv"))
# ------------------------------------------------------------------------------
# Vaccine avertable deaths by infectious syndrome and pathogen
deaths_associated_dp_pathogen   <-
aggregate_impact_by_dp_pathogen(input_data = read_csv(file.path("tables", "deaths_associated_psa.csv")),
input_rep  = 1:62)
deaths_attributable_dp_pathogen <-
aggregate_impact_by_dp_pathogen(input_data = read_csv(file.path("tables", "deaths_attributable_psa.csv")),
input_rep  = 1:62)
daly_associated_dp_pathogen     <-
aggregate_impact_by_dp_pathogen(input_data = read_csv(file.path("tables", "daly_associated_psa.csv")),
input_rep  = 1:63)
daly_attributable_dp_pathogen   <-
aggregate_impact_by_dp_pathogen(input_data = read_csv(file.path("tables", "daly_attributable_psa.csv")),
input_rep  = 1:61)
# create graph of vaccine impact by infectious syndrome and pathogen
burden_averted_by_dp_pat(data_input  = deaths_associated_dp_pathogen,
start_input = 3.6,
image_png   = file.path("figures",
"Figure_deaths_associated_dp_pat.png"),
image_eps   = file.path("figures",
"Figure_deaths_associated_dp_pat.eps"),
image_pdf   = file.path("figures",
"Figure_3.pdf"))
burden_averted_by_dp_pat(data_input  = deaths_attributable_dp_pathogen,
start_input = 3.6,
image_png   = file.path("figures",
"Figure_deaths_attributable_dp_pat.png"),
image_eps   = file.path("figures",
"Figure_deaths_attributable_dp_pat.eps"),
image_pdf   = file.path("figures",
"Figure_deaths_attributable_dp_pat.pdf"))
burden_averted_by_dp_pat(data_input  = daly_associated_dp_pathogen,
start_input = 4.1,
image_png   = file.path("figures",
"Figure_daly_associated_dp_pat.png"),
image_eps   = file.path("figures",
"Figure_daly_associated_dp_pat.eps"),
image_pdf   = file.path("figures",
"Figure_daly_associated_dp_pat.pdf"))
burden_averted_by_dp_pat(data_input  = daly_attributable_dp_pathogen,
start_input = 3.9,
image_png   = file.path("figures",
"Figure_daly_attributable_dp_pat.png"),
image_eps   = file.path("figures",
"Figure_daly_attributable_dp_pat.eps"),
image_pdf   = file.path("figures",
"Figure_daly_attributable_dp_pat.pdf"))
# ------------------------------------------------------------------------------
# Appendix Figure A1
# read the three PNG image files
img1 <- readPNG("figures/Figure_deaths_attributable_dp_pat.png")
img2 <- readPNG("figures/Figure_daly_associated_dp_pat.png")
img3 <- readPNG("figures/Figure_daly_attributable_dp_pat.png")
memory.limit(size = 200000)
install.packages("pryr")
library(pryr)
memory.limit(size =200000
)
memory.limit(size = 200000)
library(pryr)
memory.limit(size = 200000)
memory.size()
mem_used()
# Appendix Figure A1
# read the three PNG image files
img1 <- readPNG("figures/Figure_deaths_attributable_dp_pat.png")
ulimit -Sv new_limit
ulimit -Sv new_limit
ulimit -Sv 8000000
memory.limit()
